

import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author HP
 */
public class ComprobacionNumerica extends javax.swing.JFrame {

    /**
     * Creates new form ComprobacionNumerica
     */
    public ComprobacionNumerica() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        lbloperaciones = new javax.swing.JLabel();
        lblnumero = new javax.swing.JLabel();
        btncomprobar = new javax.swing.JButton();
        txtnumero = new javax.swing.JTextField();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbloperaciones.setBackground(new java.awt.Color(102, 255, 204));
        lbloperaciones.setForeground(new java.awt.Color(0, 153, 255));
        lbloperaciones.setText("Operaciones Numericas ");

        lblnumero.setForeground(new java.awt.Color(0, 204, 204));
        lblnumero.setText("Ingresar numero: ");

        btncomprobar.setBackground(new java.awt.Color(255, 204, 204));
        btncomprobar.setForeground(new java.awt.Color(102, 0, 102));
        btncomprobar.setText("comprobar");
        btncomprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncomprobarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(btncomprobar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(lblnumero)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbloperaciones)
                            .addComponent(txtnumero, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lbloperaciones)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblnumero)
                    .addComponent(txtnumero, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addComponent(btncomprobar)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btncomprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncomprobarActionPerformed
        // TODO add your handling code here:
       
      
   // Obtener el n√∫mero desde el campo de texto
        int numero = Integer.parseInt(txtnumero.getText());
          
        // Inicializar la variable resultado
        int resultado = 0;

        // Calcular la suma de los divisores del n√∫mero
        for (int i = 1; i < numero; i++) {
            if (numero % i == 0) {
                resultado += i;
            }
        }

        // Verificar si el n√∫mero es perfecto
        if (resultado == numero) {
            JOptionPane.showMessageDialog(rootPane, "EL N√öMERO ES PERFECTO: " + resultado);
        } else {
            JOptionPane.showMessageDialog(rootPane, "EL N√öMERO NO ES PERFECTO: " + resultado);
        }

        // Verificar si el n√∫mero es primo usando la funci√≥n Primo
        if (espri(numero)) {
            JOptionPane.showMessageDialog(rootPane, "EL N√öMERO ES PRIMO");
        } else {
            JOptionPane.showMessageDialog(rootPane, "EL N√öMERO NO ES PRIMO");
        }
        
        
        if(espri(numero)){
        // Calcular la suma de los n√∫meros primos y encontrar la ra√≠z cuadrada
        int sumpri = sumarprimos(numero);
        //Math.sqrt es una funci√≥n que se utiliza para calcular la ra√≠z cuadrada de un n√∫mero
        double raizprimos = Math.sqrt(sumpri);

        // Mostrar el resultado de la suma de los n√∫meros primos y su ra√≠z cuadrada
        JOptionPane.showMessageDialog(rootPane, "LA SUMA DE LOS NUMEROS PRIMIMOS MENORES A  " + numero +
                " ES: " + sumpri + "\nLA RAIZ DE LA SUMA DE TODOS LOS NUMEROS PRIMOS SON: " + raizprimos);
             }else {
            // Mostrar mensaje si el n√∫mero no es primo
            JOptionPane.showMessageDialog(rootPane, "EL NUMERO INGRESADO NO ES PRIMO üòÄ ingrese un numero primo:");
        }
    }

    // Funci√≥n para verificar si un n√∫mero es primo
    //El uso de static  significa que el m√©todo se puede invocar sin crear una instancia de la clase.
    static boolean espri(int num) {
        // El 0, 1 y 4 no son primos
        if (num == 0 || num == 1 || num == 4) {
            return false;
        }

        // Iterar hasta la mitad del n√∫mero
        for (int n = 2; n <= num / 2; n++) {
            // Si es divisible por alg√∫n n√∫mero, no es primo
            if (num % n == 0) {
                return false;
            }
        }

        // Si no se pudo dividir por ninguno de los anteriores, s√≠ es primo
        return true;
    }
  
    // Funci√≥n para calcular la suma de n√∫meros primos menores que un n√∫mero dado
    static int sumarprimos(int num) {
        int suma = 0;
        // realizar una accion  trav√©s de los n√∫meros y agregarlos a la suma si son primos
        for (int i = 2; i < num; i++) {
            if (espri(i)) {
                suma += i;
            }
        }
            return suma;
            
        
    
    }//GEN-LAST:event_btncomprobarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ComprobacionNumerica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ComprobacionNumerica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ComprobacionNumerica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ComprobacionNumerica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ComprobacionNumerica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncomprobar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel lblnumero;
    private javax.swing.JLabel lbloperaciones;
    private javax.swing.JTextField txtnumero;
    // End of variables declaration//GEN-END:variables
}
